题目：

01-复杂度1 最大子列和问题（20 分）
给定K个整数组成的序列{ N1, N2, ..., NK}，“连续子列”被定义为{ Ni, Ni+1, ..., Nj}，其中 1≤i≤j≤K。“最大子列和”则被定义为所有连续子列元素的和中最大者。例如给定序列{ -2, 11, -4, 13, -5, -2 }，其连续子列{ 11, -4, 13 }有最大的和20。现要求你编写程序，计算给定整数序列的最大子列和。

本题旨在测试各种不同的算法在各种数据情况下的表现。各组测试数据特点如下：

数据1：与样例等价，测试基本正确性；
数据2：102个随机整数；
数据3：103个随机整数；
数据4：104个随机整数；
数据5：105个随机整数；
输入格式:

输入第1行给出正整数K (≤100000)；第2行给出K个整数，其间以空格分隔。

输出格式:

在一行中输出最大子列和。如果序列中所有整数皆为负数，则输出0。

输入样例:

6
-2 11 -4 13 -5 -2
输出样例:

20

代码：
/*算法1 测试数据 n = 10^5超时
# include <cstdio>
# define maxn  100010
int main(){
  int K;
  scanf("%d",&K);
  int a[maxn];
  for(int i=0;i<K;i++){
    scanf("%d",&a[i]);
  }
  int maxSum = 0,Sum=0;
  for(int i=0;i<K;i++){
    Sum = 0;
     for(int j=i;j<K;j++){
       Sum = Sum+a[j];
       if(Sum>maxSum)maxSum = Sum;
     }
  }
  printf("%d\n",maxSum);
  return 0;
}
*/
//算法二：把O(N^2)复杂度降为O(N)
# include <cstdio>
# define maxn  100010
int MaxSubseqSum2(int a[],int n){
  int ThisSum=0,MaxSum=0;
  for(int i=0;i<n;i++){
    ThisSum += a[i];//向右累加
    if(ThisSum>MaxSum)MaxSum=ThisSum;//发现更大和，则更新当前结果
    else if(ThisSum<0)//如果当前的和为负
      ThisSum=0;//则不可能使后面的部分和增大，抛弃之
    }
  
  return MaxSum;
}
int main(){
  int K;
  scanf("%d",&K);
  int a[maxn];
  for(int i=0;i<K;i++){
    scanf("%d",&a[i]);
  }
  int maXSUM =  MaxSubseqSum2(a,K);
   printf("%d\n",maXSUM);
  
  return 0;
}
